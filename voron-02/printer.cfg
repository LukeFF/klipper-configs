### Voron 0.2 with BTT SKR Mini E3 v3.0

[include adxl.cfg]
[include leds.cfg]
[include macros.cfg]

## Printer config
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2B0051000550414235393120-if00
restart_method: command

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor host_temp]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 700
max_accel: 10000
max_z_velocity: 50
max_z_accel: 1500
square_corner_velocity: 6.0

## Steppers
[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 120
position_max: 120
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PC0 
driver_SGTHRS: 30

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 120
position_max: 120
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PC1
driver_SGTHRS: 64

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
rotation_distance: 8
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: ^PC2
position_min: -0.5
position_endstop: 120.700
position_max: 121
homing_speed: 25
homing_retract_dist: 3.0
second_homing_speed: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
run_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 0

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
rotation_distance: 22.23
microsteps: 32
full_steps_per_rotation: 200
gear_ratio: 50:10
nozzle_diameter: 0.4
filament_diameter: 1.75
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.04
pressure_advance_smooth_time: 0.040
heater_pin: PC8
sensor_type: Generic 3950
sensor_pin: PA0
control: pid
pid_Kp: 27.756
pid_Ki: 1.303
pid_Kd: 147.798
min_extrude_temp: 170
min_temp: 0
max_temp: 270 

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[heater_bed]
heater_pin: PC9
sensor_type: Generic 3950
sensor_pin: PC4
smooth_time: 3.0
min_temp: 0
max_temp: 120
control: pid
pid_Kp: 56.636
pid_Ki: 2.622
pid_Kd: 305.836

[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[safe_z_home]
home_xy_position: 60,60
speed: 50.0
z_hop: 5
z_hop_speed: 15.0

[idle_timeout]
gcode:
  {% if printer.webhooks.state|lower == 'ready' %}
    {% if printer.pause_resume.is_paused|lower == 'false' %}
      M117 Idle timeout reached
      TURN_OFF_HEATERS
      M84
    {% endif %}
  {% endif %}
timeout: 1800

[heater_fan hotend_fan]
pin: PC6
max_power: 1.0
kick_start_time: 1.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0
cycle_time: 0.010

[fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.5
off_below: 0.13
cycle_time: 0.010

# [heater_fan controller_fan]
# pin: PB15
# heater: heater_bed
# heater_temp: 45.0

[neopixel bed_led]
pin: PA8
chain_count: 1
# color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[display]
lcd_type: sh1106
click_pin: ^!PA15
i2c_bus: i2c1_PB8_PB9
i2c_mcu: mcu
encoder_pins: ^PA9, ^PA10
kill_pin: ^!PD6
vcomh: 60
x_offset: 2

[neopixel display_led]
pin: PB5
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.1
initial_BLUE: 0.1

[skew_correction]

[input_shaper]
shaper_freq_x: 77.6
shaper_freq_y: 73.6
shaper_type_x: zv
shaper_type_y: mzv

[respond]
default_type: command

[force_move]
enable_force_move: True

[firmware_retraction]
retract_length: 0.6

[filament_switch_sensor fsensor]
pause_on_runout: True
runout_gcode:
    M118 Filament Runout Detected
    M600
insert_gcode:
    M118 Filament Load Detected
    LOAD_FILAMENT
event_delay: 3.0
pause_delay: 0.01
switch_pin: PC15

### Cancel object (aka Marlin/RRF M486 commands) support
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params and params.K|float < 1.0 %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro BEFORE_LAYER_CHANGE]
description: Get's executed before a layer change.
gcode:
  # TIMELAPSE_TAKE_FRAME

[gcode_macro AFTER_LAYER_CHANGE]
description: Get's executed after a layer change.
gcode:
  ## Leave me here

[gcode_macro SHUTDOWN]
gcode:
  {action_call_remote_method("shutdown_machine")}

[gcode_macro REBOOT]
gcode:
  {action_call_remote_method("reboot_machine")}

[gcode_macro _bot_data]
variable_lapse_video_size: 0
variable_lapse_filename: 'None'
variable_lapse_path: 'None'
gcode:
    M118 Setting bot lapse variables
